plugins {
    id 'org.springframework.boot' version '3.3.0' apply false
    id 'io.spring.dependency-management' version '1.1.5'
}

group   = 'com.github'
version = '0.1.0-SNAPSHOT'

ext {
    javaVersion      = JavaVersion.VERSION_21
    lombokVersion    = '1.18.32'
    mapstructVersion = '1.5.5.Final'
    junitVersion     = '5.10.2'
}

// Universal configuration for all subprojects
subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    java {
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
    }

    repositories {} // repos defined in settings.gradle

    dependencies {
        compileOnly         "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testImplementation  "org.junit.jupiter:junit-jupiter:${junitVersion}"
    }

    test {
        useJUnitPlatform()
        testLogging.events 'PASSED', 'FAILED', 'SKIPPED'
    }

    jacocoTestReport {
        dependsOn test
        reports { xml.required = true; html.required = true }
    }

}

// Apply Spring Boot to service modules only
configure(subprojects.findAll { it.name in ['api', 'core', 'edge', 'analytics'] }) {
    apply plugin: 'org.springframework.boot'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

// common module is a library
project(':common') { apply plugin: 'java-library' }

// api, core, edge, analytics handle their own dependencies in their own build.gradle

// Utility task
tasks.register('modules') {
    group = 'Help'
    description = 'List all sub-projects'
    doLast { subprojects.each { println "â€¢ ${it.path}" } }
}