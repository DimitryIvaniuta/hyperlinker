// ============================================================================
// HyperLinker – root Gradle build (Groovy DSL) – June 2025
// Highlights:
//   • Java 21 toolchain
//   • Spring Boot 3.3 applied only to runnable services
//   • Avro plugin used only where needed (core, analytics)
//   • No legacy compile classpath warnings
// ============================================================================
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
//        classpath "com.bakdata:avro-gradle-plugin:1.5.0"
    }
}
plugins {
    id 'org.springframework.boot' version '3.3.0' apply false
    id 'io.spring.dependency-management' version '1.1.5'
}

//apply plugin: 'com.bakdata.avro'

group   = 'com.github'
version = '0.1.0-SNAPSHOT'

ext {
    javaVersion      = JavaVersion.VERSION_21
    mapstructVersion = '1.5.5.Final'
    lombokVersion    = '1.18.32'
    junitVersion     = '5.10.2'
    avroPluginVersion = '1.5.0'          // bakdata plugin (see sub‑projects)
}

// ---------------------------------------------------------------------------
// Universal configuration – applied to every sub‑project
// ---------------------------------------------------------------------------
//import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask
subprojects {
    apply plugin: 'java'                              // plain Java plugin – no java‑library
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    java {
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
    }

//    repositories { mavenCentral() }

    dependencies {
        compileOnly          "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor  "org.projectlombok:lombok:${lombokVersion}"
        testImplementation   "org.junit.jupiter:junit-jupiter:${junitVersion}"
    }

    test {
        useJUnitPlatform()
        testLogging.events "PASSED", "FAILED", "SKIPPED"
    }

    jacocoTestReport {
        dependsOn test
        reports { xml.required = true; html.required = true }
    }

//    plugins.withId('com.bakdata.avro') {
//        def avroTaskClass = Class.forName('com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask')
//        tasks.withType(avroTaskClass).configureEach {
//            it.notCompatibleWithConfigurationCache('bakdata Avro plugin not yet cache‑ready')
//        }
//    }
}

// ---------------------------------------------------------------------------
// Apply Spring Boot only to runnable service modules
// ---------------------------------------------------------------------------
configure(subprojects.findAll { it.name in ['api', 'core', 'edge', 'analytics'] }) {
    apply plugin: 'org.springframework.boot'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

// ---------------------------------------------------------------------------
// Library module – common (needs java‑library for API exposure)
// ---------------------------------------------------------------------------
project(':common') {
    apply plugin: 'java-library'
}

// ---------------------------------------------------------------------------
// Service‑specific dependency blocks
// ---------------------------------------------------------------------------
project(':api') {
    dependencies {
        implementation project(':common')
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    }
}

project(':core') {
//    plugins.apply("com.bakdata.avro")
    dependencies {
        implementation project(':common')
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.kafka:spring-kafka'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.flywaydb:flyway-core'
        runtimeOnly   'org.postgresql:postgresql'
        implementation 'io.confluent:kafka-avro-serializer:7.5.1'
    }
}

project(':edge') {
    dependencies {
        implementation project(':common')
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
        implementation 'org.springframework.kafka:spring-kafka'
        runtimeOnly     'org.postgresql:postgresql'
    }
}

project(':analytics') {
    // will also apply Avro plugin inside its own build file if you decide to generate POJOs here
    dependencies {
        implementation project(':common')
        implementation 'org.springframework.kafka:spring-kafka'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly     'org.postgresql:postgresql'
    }
}

// ---------------------------------------------------------------------------
// Utility task – list modules
// ---------------------------------------------------------------------------
tasks.register('modules') {
    group = 'Help'
    description = 'List all sub‑projects.'
    doLast { subprojects.each { println "• ${it.path}" } }
}
